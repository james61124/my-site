<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>String - tag - James Blog</title>
        <link>https://jamesblogger.com/tags/String/</link>
        <description>String - tag - James Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 01 Mar 2025 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://jamesblogger.com/tags/String/" rel="self" type="application/rss+xml" /><item>
    <title>[ Leetcode 1143 ] Longest Common Subsequence | Solution Approach &amp; Explanation</title>
    <link>https://jamesblogger.com/program/leetcode-1143/</link>
    <pubDate>Sat, 01 Mar 2025 00:00:00 &#43;0000</pubDate><author>
        <name>James</name>
    </author><guid>https://jamesblogger.com/program/leetcode-1143/</guid>
    <description><![CDATA[Given two strings, text1 and text2, find the length of their Longest Common Subsequence (LCS).
⚠️ Note:
A subsequence does not need to be contiguous but must maintain the original order. If there is no common subsequence, return 0. Link🔗：https://leetcode.com/problems/longest-common-subsequence/
Solution - DP (Double-Sequence Linear DP Problem) This problem can be solved using Double-Sequence Linear DP, as the input consists of two strings. We define dp[i+1][j+1] to represent the length of the longest common subsequence (LCS) ending at text1[i] and text2[j].]]></description>
</item></channel>
</rss>
