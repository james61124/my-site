<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Data Structure - tag - James Blog</title>
        <link>http://localhost:36995/tags/Data-Structure/</link>
        <description>Data Structure - tag - James Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 07 Mar 2025 00:00:00 &#43;0000</lastBuildDate><atom:link href="http://localhost:36995/tags/Data-Structure/" rel="self" type="application/rss+xml" /><item>
    <title>[ Data Structure ] Stack &amp; Monotone Stack | Core Concepts &amp; Leetcode Problems Analysis</title>
    <link>http://localhost:36995/program/stack/</link>
    <pubDate>Fri, 07 Mar 2025 00:00:00 &#43;0000</pubDate><author>
        <name>James</name>
    </author><guid>http://localhost:36995/program/stack/</guid>
    <description><![CDATA[A Stack is a Last In, First Out (LIFO) data structure, similar to stacking blocks. The key characteristic is that you can only access the top element, and removal also happens only from the top. You cannot directly access elements below the top.
Common Stack Operations in C++ STL :
stack&lt;int&gt;st; - Declare a stack st.push(value); - Insert an element at the top st.pop();	- Remove the top element (⚠️ Does not return the value) st.]]></description>
</item></channel>
</rss>
