<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Algorithm - category - James Blog</title>
        <link>https://jamesblogger.com/categories/Algorithm/</link>
        <description>Algorithm - category - James Blog</description>
        <generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Mon, 03 Mar 2025 00:00:00 &#43;0000</lastBuildDate><atom:link href="https://jamesblogger.com/categories/Algorithm/" rel="self" type="application/rss+xml" /><item>
    <title>[ Leetcode 1343 ] Number of Sub-arrays of Size K and Average Greater than or Equal to Threshold | Solution Approach &amp; Explanation</title>
    <link>https://jamesblogger.com/program/leetcode-1343/</link>
    <pubDate>Mon, 03 Mar 2025 00:00:00 &#43;0000</pubDate><author>
        <name>James</name>
    </author><guid>https://jamesblogger.com/program/leetcode-1343/</guid>
    <description><![CDATA[Given an integer array nums, along with two integers k and threshold, find the number of subarrays of length k whose average is greater than or equal to threshold.
LinküîóÔºöhttps://leetcode.com/problems/number-of-sub-arrays-of-size-k-and-average-greater-than-or-equal-to-threshold/
Problem Analysis The goal is to find all subarrays of length k that meet the given condition. This means we need to examine every subarray of length k.
Brute Force A straightforward approach is to enumerate all possible subarrays of length k.]]></description>
</item><item>
    <title>[ Leetcode 1143 ] Longest Common Subsequence | Solution Approach &amp; Explanation</title>
    <link>https://jamesblogger.com/program/leetcode-1143/</link>
    <pubDate>Sat, 01 Mar 2025 00:00:00 &#43;0000</pubDate><author>
        <name>James</name>
    </author><guid>https://jamesblogger.com/program/leetcode-1143/</guid>
    <description><![CDATA[Given two strings, text1 and text2, find the length of their Longest Common Subsequence (LCS).
‚ö†Ô∏è Note:
A subsequence does not need to be contiguous but must maintain the original order. If there is no common subsequence, return 0. LinküîóÔºöhttps://leetcode.com/problems/longest-common-subsequence/
Solution - DP (Double-Sequence Linear DP Problem) This problem can be solved using Double-Sequence Linear DP, as the input consists of two strings. We define dp[i+1][j+1] to represent the length of the longest common subsequence (LCS) ending at text1[i] and text2[j].]]></description>
</item><item>
    <title>[ Leetcode 11 ] Container With Most Water | Solution Approach &amp; Explanation</title>
    <link>https://jamesblogger.com/program/leetcode-11/</link>
    <pubDate>Thu, 27 Feb 2025 00:00:00 &#43;0000</pubDate><author>
        <name>James</name>
    </author><guid>https://jamesblogger.com/program/leetcode-11/</guid>
    <description><![CDATA[In a given array, each element represents the height of a vertical line. The task is to choose two lines such that the container formed with the x-axis can hold the maximum amount of water and return that maximum volume.
LinküîóÔºöhttps://leetcode.com/problems/container-with-most-water/
Solution - Opposite Direction Two Pointers The key idea is that the area of the container is determined by:
Area = min(Height of left, Height of right) √ó Distance between them We aim to find two lines that maximize this area.]]></description>
</item><item>
    <title>[ Leetcode 167 ] Two Sum II - Input Array Is Sorted | Solution Approach &amp; Explanation</title>
    <link>https://jamesblogger.com/program/leetcode-167/</link>
    <pubDate>Wed, 26 Feb 2025 00:00:00 &#43;0000</pubDate><author>
        <name>James</name>
    </author><guid>https://jamesblogger.com/program/leetcode-167/</guid>
    <description><![CDATA[This problem is a variation of Two Sum. Given an array sorted in ascending order, the goal is to find two numbers whose sum equals the target value and return their 1-based indices.
LinküîóÔºöhttps://leetcode.com/problems/two-sum-ii-input-array-is-sorted/
Method - Opposite Direction Two Pointers This problem can be solved using opposite direction two-pointer technique, since this problem is about finding elements under certain constraints in a sorted array. Set left pointer at the first element and right pointer at the last element.]]></description>
</item><item>
    <title>[ Leetcode 26 ] Remove Duplicates from Sorted Array | Solution Approach &amp; Explanation</title>
    <link>https://jamesblogger.com/program/leetcode-26/</link>
    <pubDate>Wed, 26 Feb 2025 00:00:00 &#43;0000</pubDate><author>
        <name>James</name>
    </author><guid>https://jamesblogger.com/program/leetcode-26/</guid>
    <description><![CDATA[Given an ascending sorted array - nums, the task is to remove duplicate elements in place so that each element appears only once and return the new length of the array.
‚ö† RequirementsÔºö
Extra array space cannot be used; modifications must be done in place. If the returned array length is k, it means the first k elements of nums contain the result after removing duplicates, while the remaining elements can be arbitrary and do not need to be considered.]]></description>
</item><item>
    <title>[ Leetcode 349 ] Intersection of Two Arrays | Ëß£È°åÊÄùË∑ØÂàÜ‰∫´</title>
    <link>https://jamesblogger.com/program/leetcode-349/</link>
    <pubDate>Sun, 23 Feb 2025 00:00:00 &#43;0000</pubDate><author>
        <name>James</name>
    </author><guid>https://jamesblogger.com/program/leetcode-349/</guid>
    <description><![CDATA[Given two integer arrays nums1 and nums2, find their intersection, ensuring that each element appears only once in the result. LinküîóÔºöhttps://leetcode.com/problems/intersection-o]]></description>
</item><item>
    <title>[ Leetcode 125 ] Valid Palindrome | Solution Approach &amp; Explanation</title>
    <link>https://jamesblogger.com/program/leetcode-125/</link>
    <pubDate>Sat, 15 Feb 2025 00:00:00 &#43;0000</pubDate><author>
        <name>James</name>
    </author><guid>https://jamesblogger.com/program/leetcode-125/</guid>
    <description><![CDATA[This problem requires determining whether a given string is a palindrome, ignoring case and non-alphanumeric characters.
LinküîóÔºöhttps://leetcode.com/problems/valid-palindrome/
Solution - Opposite Direction Two Pointers This problem can be solved using an opposite direction two-pointer approach. The idea is to check whether the characters at the left and right pointers are the same. If they are, both pointers move inward. The main points to consider are ensuring that left and right do not go out of bounds and using isalnum() to check whether a character is alphanumeric.]]></description>
</item><item>
    <title>[ Leetcode 209 ] Minimum Size Subarray Sum | Solution Approach &amp; Explanation</title>
    <link>https://jamesblogger.com/program/leetcode-209/</link>
    <pubDate>Wed, 29 Jan 2025 00:00:00 &#43;0000</pubDate><author>
        <name>James</name>
    </author><guid>https://jamesblogger.com/program/leetcode-209/</guid>
    <description><![CDATA[Given a positive integer array nums and a target value target, find the smallest contiguous subarray whose sum is greater than or equal to target. If no such subarray exists, return 0.
LinküîóÔºöhttps://leetcode.com/problems/minimum-size-subarray-sum/
Method 1 - Sliding Window This problem can be solved using the Sliding Window technique. Since all numbers in the array are positive, we know that if a subarray sum reaches or exceeds target, adding more numbers will only make it longer but won&rsquo;t help find the shortest subarray.]]></description>
</item><item>
    <title>[ Leetcode 300 ] Longest Increasing Subsequence | Solution Approach &amp; Explanation</title>
    <link>https://jamesblogger.com/program/leetcode-300/</link>
    <pubDate>Wed, 29 Jan 2025 00:00:00 &#43;0000</pubDate><author>
        <name>James</name>
    </author><guid>https://jamesblogger.com/program/leetcode-300/</guid>
    <description><![CDATA[Given an array, find the longest increasing subsequence (LIS). The elements in this subsequence must appear in increasing order but do not need to be consecutive in the original array.
LinküîóÔºöhttps://leetcode.com/problems/longest-increasing-subsequence/
Method 1 - Dynamic Programming Time Complexity - O( n^2 ), due to the nested loops.
Space Complexity - O( n ), as we need an array of size n for dp.
Step 1 Create a dp array where dp[i] represents the length of the LIS that ends at nums[i].]]></description>
</item><item>
    <title>[ Leetcode 841 ] Keys and Rooms | Solution Approach &amp; Explanation</title>
    <link>https://jamesblogger.com/program/leetcode-841/</link>
    <pubDate>Wed, 29 Jan 2025 00:00:00 &#43;0000</pubDate><author>
        <name>James</name>
    </author><guid>https://jamesblogger.com/program/leetcode-841/</guid>
    <description><![CDATA[There are n rooms labeled from 0 to n-1. Each rooms[i] contains a list of keys that can be used to unlock other rooms. Initially, you start in room 0, which is already unlocked. The goal is to determine whether you can visit all rooms.
LinküîóÔºöhttps://leetcode.com/problems/keys-and-rooms/
Solution - DFS This problem can be solved using Depth-First Search (DFS), as it is essentially a graph traversal problem. The rooms and their keys form a directed graph, where a key in rooms[i] represents an edge from room i to another room.]]></description>
</item></channel>
</rss>
